<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 灿的博客</title>
    <link>https://yaocanwei.github.io/posts/</link>
    <description>Recent content in Posts on 灿的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2021 cheney</copyright>
    <lastBuildDate>Sun, 28 Mar 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://yaocanwei.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>记线上mysql死锁问题:&#34;如何避免死锁&#34;</title>
      <link>https://yaocanwei.github.io/2021/03/%E8%AE%B0%E7%BA%BF%E4%B8%8Amysql%E6%AD%BB%E9%94%81%E9%97%AE%E9%A2%98%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E6%AD%BB%E9%94%81/</link>
      <pubDate>Sun, 28 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yaocanwei.github.io/2021/03/%E8%AE%B0%E7%BA%BF%E4%B8%8Amysql%E6%AD%BB%E9%94%81%E9%97%AE%E9%A2%98%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E6%AD%BB%E9%94%81/</guid>
      <description>回忆之前参与过的一个项目，在项目的初期，我们是基于主库完成读写操作，并没有做读写分离。偶尔收到系统死锁异常报警信息。 经过日志分析，主要是作为幂等性校验的一张表出现死锁异常，初步怀疑是索引导致的死锁问题。 发生死锁的表结构及索引情况:
CREATE TABLE `payment_record` ( `id` int(10) unsigned NOT NULL AUTO_INCREMENT, `payment_sn` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;支付流水&#39;, `order_id` bigint(20) NOT NULL COMMENT &#39;订单表id&#39;, `member_id` bigint(20) NOT NULL COMMENT &#39;交易的用户ID&#39;, `amount` decimal(8,2) NOT NULL COMMENT &#39;交易金额&#39;, `pay_channel` tinyint(4) NOT NULL COMMENT &#39;支付类型 0:余额 1:微信 2:支付宝&#39;, `source` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;支付来源 wx app web&#39;, `status` tinyint(4) NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;支付状态 -1：取消 0 未完成 1已完成 -2:异常&#39;, `completion_time` datetime(0) DEFAULT NULL COMMENT &#39;交易完成时间&#39;, `note` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT &#39;备注&#39;, `created_at` datetime(0) DEFAULT NULL, `updated_at` datetime(0) DEFAULT NULL, PRIMARY KEY (`id`), INDEX `idx_payment_status`(`order_id`,`status`) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;  首先，创建一张支付记录表，主要用于校验订单重复支付。 为了能重现该问题，我们先关闭自动提交事务提交。(MySQL 数据库和 Oracle 提交事务不太一样，MySQL 数据库默认情况下是自动提交事务) 以下命令行用于查看自动提交事务是否开启：</description>
    </item>
    
    <item>
      <title>开发必备-网络基础</title>
      <link>https://yaocanwei.github.io/2021/03/%E5%BC%80%E5%8F%91%E5%BF%85%E5%A4%87-%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Sun, 14 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yaocanwei.github.io/2021/03/%E5%BC%80%E5%8F%91%E5%BF%85%E5%A4%87-%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</guid>
      <description></description>
    </item>
    
    <item>
      <title>mysql分库分表</title>
      <link>https://yaocanwei.github.io/2021/03/mysql%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/</link>
      <pubDate>Fri, 12 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yaocanwei.github.io/2021/03/mysql%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8/</guid>
      <description></description>
    </item>
    
    <item>
      <title>网关实现</title>
      <link>https://yaocanwei.github.io/2021/03/%E7%BD%91%E5%85%B3%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Sun, 14 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yaocanwei.github.io/2021/03/%E7%BD%91%E5%85%B3%E5%AE%9E%E7%8E%B0/</guid>
      <description></description>
    </item>
    
    <item>
      <title>context类型</title>
      <link>https://yaocanwei.github.io/2021/03/context%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Sun, 14 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yaocanwei.github.io/2021/03/context%E7%B1%BB%E5%9E%8B/</guid>
      <description></description>
    </item>
    
    <item>
      <title>分析go runtime</title>
      <link>https://yaocanwei.github.io/2021/03/%E5%88%86%E6%9E%90go-runtime/</link>
      <pubDate>Sun, 14 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yaocanwei.github.io/2021/03/%E5%88%86%E6%9E%90go-runtime/</guid>
      <description></description>
    </item>
    
    <item>
      <title>构建协程池</title>
      <link>https://yaocanwei.github.io/2021/03/%E6%9E%84%E5%BB%BA%E5%8D%8F%E7%A8%8B%E6%B1%A0/</link>
      <pubDate>Sat, 13 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yaocanwei.github.io/2021/03/%E6%9E%84%E5%BB%BA%E5%8D%8F%E7%A8%8B%E6%B1%A0/</guid>
      <description></description>
    </item>
    
    <item>
      <title>详解raft协议原理</title>
      <link>https://yaocanwei.github.io/2021/03/%E8%AF%A6%E8%A7%A3raft%E5%8D%8F%E8%AE%AE%E5%8E%9F%E7%90%86/</link>
      <pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yaocanwei.github.io/2021/03/%E8%AF%A6%E8%A7%A3raft%E5%8D%8F%E8%AE%AE%E5%8E%9F%E7%90%86/</guid>
      <description></description>
    </item>
    
    <item>
      <title>分布式锁</title>
      <link>https://yaocanwei.github.io/2021/03/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</link>
      <pubDate>Wed, 10 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yaocanwei.github.io/2021/03/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>